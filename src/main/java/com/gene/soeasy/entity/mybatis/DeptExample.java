package com.gene.soeasy.entity.mybatis;

import java.util.ArrayList;
import java.util.List;

public class DeptExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table org_dept
     *
     * @mbg.generated Sat Sep 03 17:26:49 CST 2022
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table org_dept
     *
     * @mbg.generated Sat Sep 03 17:26:49 CST 2022
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table org_dept
     *
     * @mbg.generated Sat Sep 03 17:26:49 CST 2022
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table org_dept
     *
     * @mbg.generated Sat Sep 03 17:26:49 CST 2022
     */
    public DeptExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table org_dept
     *
     * @mbg.generated Sat Sep 03 17:26:49 CST 2022
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table org_dept
     *
     * @mbg.generated Sat Sep 03 17:26:49 CST 2022
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table org_dept
     *
     * @mbg.generated Sat Sep 03 17:26:49 CST 2022
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table org_dept
     *
     * @mbg.generated Sat Sep 03 17:26:49 CST 2022
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table org_dept
     *
     * @mbg.generated Sat Sep 03 17:26:49 CST 2022
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table org_dept
     *
     * @mbg.generated Sat Sep 03 17:26:49 CST 2022
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table org_dept
     *
     * @mbg.generated Sat Sep 03 17:26:49 CST 2022
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table org_dept
     *
     * @mbg.generated Sat Sep 03 17:26:49 CST 2022
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table org_dept
     *
     * @mbg.generated Sat Sep 03 17:26:49 CST 2022
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table org_dept
     *
     * @mbg.generated Sat Sep 03 17:26:49 CST 2022
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table org_dept
     *
     * @mbg.generated Sat Sep 03 17:26:49 CST 2022
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andDeptidIsNull() {
            addCriterion("deptID is null");
            return (Criteria) this;
        }

        public Criteria andDeptidIsNotNull() {
            addCriterion("deptID is not null");
            return (Criteria) this;
        }

        public Criteria andDeptidEqualTo(Integer value) {
            addCriterion("deptID =", value, "deptid");
            return (Criteria) this;
        }

        public Criteria andDeptidNotEqualTo(Integer value) {
            addCriterion("deptID <>", value, "deptid");
            return (Criteria) this;
        }

        public Criteria andDeptidGreaterThan(Integer value) {
            addCriterion("deptID >", value, "deptid");
            return (Criteria) this;
        }

        public Criteria andDeptidGreaterThanOrEqualTo(Integer value) {
            addCriterion("deptID >=", value, "deptid");
            return (Criteria) this;
        }

        public Criteria andDeptidLessThan(Integer value) {
            addCriterion("deptID <", value, "deptid");
            return (Criteria) this;
        }

        public Criteria andDeptidLessThanOrEqualTo(Integer value) {
            addCriterion("deptID <=", value, "deptid");
            return (Criteria) this;
        }

        public Criteria andDeptidIn(List<Integer> values) {
            addCriterion("deptID in", values, "deptid");
            return (Criteria) this;
        }

        public Criteria andDeptidNotIn(List<Integer> values) {
            addCriterion("deptID not in", values, "deptid");
            return (Criteria) this;
        }

        public Criteria andDeptidBetween(Integer value1, Integer value2) {
            addCriterion("deptID between", value1, value2, "deptid");
            return (Criteria) this;
        }

        public Criteria andDeptidNotBetween(Integer value1, Integer value2) {
            addCriterion("deptID not between", value1, value2, "deptid");
            return (Criteria) this;
        }

        public Criteria andDeptnameIsNull() {
            addCriterion("deptName is null");
            return (Criteria) this;
        }

        public Criteria andDeptnameIsNotNull() {
            addCriterion("deptName is not null");
            return (Criteria) this;
        }

        public Criteria andDeptnameEqualTo(String value) {
            addCriterion("deptName =", value, "deptname");
            return (Criteria) this;
        }

        public Criteria andDeptnameNotEqualTo(String value) {
            addCriterion("deptName <>", value, "deptname");
            return (Criteria) this;
        }

        public Criteria andDeptnameGreaterThan(String value) {
            addCriterion("deptName >", value, "deptname");
            return (Criteria) this;
        }

        public Criteria andDeptnameGreaterThanOrEqualTo(String value) {
            addCriterion("deptName >=", value, "deptname");
            return (Criteria) this;
        }

        public Criteria andDeptnameLessThan(String value) {
            addCriterion("deptName <", value, "deptname");
            return (Criteria) this;
        }

        public Criteria andDeptnameLessThanOrEqualTo(String value) {
            addCriterion("deptName <=", value, "deptname");
            return (Criteria) this;
        }

        public Criteria andDeptnameLike(String value) {
            addCriterion("deptName like", value, "deptname");
            return (Criteria) this;
        }

        public Criteria andDeptnameNotLike(String value) {
            addCriterion("deptName not like", value, "deptname");
            return (Criteria) this;
        }

        public Criteria andDeptnameIn(List<String> values) {
            addCriterion("deptName in", values, "deptname");
            return (Criteria) this;
        }

        public Criteria andDeptnameNotIn(List<String> values) {
            addCriterion("deptName not in", values, "deptname");
            return (Criteria) this;
        }

        public Criteria andDeptnameBetween(String value1, String value2) {
            addCriterion("deptName between", value1, value2, "deptname");
            return (Criteria) this;
        }

        public Criteria andDeptnameNotBetween(String value1, String value2) {
            addCriterion("deptName not between", value1, value2, "deptname");
            return (Criteria) this;
        }

        public Criteria andDeptpidIsNull() {
            addCriterion("deptPID is null");
            return (Criteria) this;
        }

        public Criteria andDeptpidIsNotNull() {
            addCriterion("deptPID is not null");
            return (Criteria) this;
        }

        public Criteria andDeptpidEqualTo(Integer value) {
            addCriterion("deptPID =", value, "deptpid");
            return (Criteria) this;
        }

        public Criteria andDeptpidNotEqualTo(Integer value) {
            addCriterion("deptPID <>", value, "deptpid");
            return (Criteria) this;
        }

        public Criteria andDeptpidGreaterThan(Integer value) {
            addCriterion("deptPID >", value, "deptpid");
            return (Criteria) this;
        }

        public Criteria andDeptpidGreaterThanOrEqualTo(Integer value) {
            addCriterion("deptPID >=", value, "deptpid");
            return (Criteria) this;
        }

        public Criteria andDeptpidLessThan(Integer value) {
            addCriterion("deptPID <", value, "deptpid");
            return (Criteria) this;
        }

        public Criteria andDeptpidLessThanOrEqualTo(Integer value) {
            addCriterion("deptPID <=", value, "deptpid");
            return (Criteria) this;
        }

        public Criteria andDeptpidIn(List<Integer> values) {
            addCriterion("deptPID in", values, "deptpid");
            return (Criteria) this;
        }

        public Criteria andDeptpidNotIn(List<Integer> values) {
            addCriterion("deptPID not in", values, "deptpid");
            return (Criteria) this;
        }

        public Criteria andDeptpidBetween(Integer value1, Integer value2) {
            addCriterion("deptPID between", value1, value2, "deptpid");
            return (Criteria) this;
        }

        public Criteria andDeptpidNotBetween(Integer value1, Integer value2) {
            addCriterion("deptPID not between", value1, value2, "deptpid");
            return (Criteria) this;
        }

        public Criteria andCompanyidIsNull() {
            addCriterion("companyID is null");
            return (Criteria) this;
        }

        public Criteria andCompanyidIsNotNull() {
            addCriterion("companyID is not null");
            return (Criteria) this;
        }

        public Criteria andCompanyidEqualTo(Integer value) {
            addCriterion("companyID =", value, "companyid");
            return (Criteria) this;
        }

        public Criteria andCompanyidNotEqualTo(Integer value) {
            addCriterion("companyID <>", value, "companyid");
            return (Criteria) this;
        }

        public Criteria andCompanyidGreaterThan(Integer value) {
            addCriterion("companyID >", value, "companyid");
            return (Criteria) this;
        }

        public Criteria andCompanyidGreaterThanOrEqualTo(Integer value) {
            addCriterion("companyID >=", value, "companyid");
            return (Criteria) this;
        }

        public Criteria andCompanyidLessThan(Integer value) {
            addCriterion("companyID <", value, "companyid");
            return (Criteria) this;
        }

        public Criteria andCompanyidLessThanOrEqualTo(Integer value) {
            addCriterion("companyID <=", value, "companyid");
            return (Criteria) this;
        }

        public Criteria andCompanyidIn(List<Integer> values) {
            addCriterion("companyID in", values, "companyid");
            return (Criteria) this;
        }

        public Criteria andCompanyidNotIn(List<Integer> values) {
            addCriterion("companyID not in", values, "companyid");
            return (Criteria) this;
        }

        public Criteria andCompanyidBetween(Integer value1, Integer value2) {
            addCriterion("companyID between", value1, value2, "companyid");
            return (Criteria) this;
        }

        public Criteria andCompanyidNotBetween(Integer value1, Integer value2) {
            addCriterion("companyID not between", value1, value2, "companyid");
            return (Criteria) this;
        }

        public Criteria andDeptdescIsNull() {
            addCriterion("deptDesc is null");
            return (Criteria) this;
        }

        public Criteria andDeptdescIsNotNull() {
            addCriterion("deptDesc is not null");
            return (Criteria) this;
        }

        public Criteria andDeptdescEqualTo(String value) {
            addCriterion("deptDesc =", value, "deptdesc");
            return (Criteria) this;
        }

        public Criteria andDeptdescNotEqualTo(String value) {
            addCriterion("deptDesc <>", value, "deptdesc");
            return (Criteria) this;
        }

        public Criteria andDeptdescGreaterThan(String value) {
            addCriterion("deptDesc >", value, "deptdesc");
            return (Criteria) this;
        }

        public Criteria andDeptdescGreaterThanOrEqualTo(String value) {
            addCriterion("deptDesc >=", value, "deptdesc");
            return (Criteria) this;
        }

        public Criteria andDeptdescLessThan(String value) {
            addCriterion("deptDesc <", value, "deptdesc");
            return (Criteria) this;
        }

        public Criteria andDeptdescLessThanOrEqualTo(String value) {
            addCriterion("deptDesc <=", value, "deptdesc");
            return (Criteria) this;
        }

        public Criteria andDeptdescLike(String value) {
            addCriterion("deptDesc like", value, "deptdesc");
            return (Criteria) this;
        }

        public Criteria andDeptdescNotLike(String value) {
            addCriterion("deptDesc not like", value, "deptdesc");
            return (Criteria) this;
        }

        public Criteria andDeptdescIn(List<String> values) {
            addCriterion("deptDesc in", values, "deptdesc");
            return (Criteria) this;
        }

        public Criteria andDeptdescNotIn(List<String> values) {
            addCriterion("deptDesc not in", values, "deptdesc");
            return (Criteria) this;
        }

        public Criteria andDeptdescBetween(String value1, String value2) {
            addCriterion("deptDesc between", value1, value2, "deptdesc");
            return (Criteria) this;
        }

        public Criteria andDeptdescNotBetween(String value1, String value2) {
            addCriterion("deptDesc not between", value1, value2, "deptdesc");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table org_dept
     *
     * @mbg.generated do_not_delete_during_merge Sat Sep 03 17:26:49 CST 2022
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table org_dept
     *
     * @mbg.generated Sat Sep 03 17:26:49 CST 2022
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}