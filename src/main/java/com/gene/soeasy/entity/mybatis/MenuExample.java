package com.gene.soeasy.entity.mybatis;

import java.util.ArrayList;
import java.util.List;

public class MenuExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sys_menu
     *
     * @mbg.generated Sat Sep 03 17:26:49 CST 2022
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sys_menu
     *
     * @mbg.generated Sat Sep 03 17:26:49 CST 2022
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sys_menu
     *
     * @mbg.generated Sat Sep 03 17:26:49 CST 2022
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_menu
     *
     * @mbg.generated Sat Sep 03 17:26:49 CST 2022
     */
    public MenuExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_menu
     *
     * @mbg.generated Sat Sep 03 17:26:49 CST 2022
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_menu
     *
     * @mbg.generated Sat Sep 03 17:26:49 CST 2022
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_menu
     *
     * @mbg.generated Sat Sep 03 17:26:49 CST 2022
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_menu
     *
     * @mbg.generated Sat Sep 03 17:26:49 CST 2022
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_menu
     *
     * @mbg.generated Sat Sep 03 17:26:49 CST 2022
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_menu
     *
     * @mbg.generated Sat Sep 03 17:26:49 CST 2022
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_menu
     *
     * @mbg.generated Sat Sep 03 17:26:49 CST 2022
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_menu
     *
     * @mbg.generated Sat Sep 03 17:26:49 CST 2022
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_menu
     *
     * @mbg.generated Sat Sep 03 17:26:49 CST 2022
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_menu
     *
     * @mbg.generated Sat Sep 03 17:26:49 CST 2022
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sys_menu
     *
     * @mbg.generated Sat Sep 03 17:26:49 CST 2022
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andMenuidIsNull() {
            addCriterion("menuID is null");
            return (Criteria) this;
        }

        public Criteria andMenuidIsNotNull() {
            addCriterion("menuID is not null");
            return (Criteria) this;
        }

        public Criteria andMenuidEqualTo(Integer value) {
            addCriterion("menuID =", value, "menuid");
            return (Criteria) this;
        }

        public Criteria andMenuidNotEqualTo(Integer value) {
            addCriterion("menuID <>", value, "menuid");
            return (Criteria) this;
        }

        public Criteria andMenuidGreaterThan(Integer value) {
            addCriterion("menuID >", value, "menuid");
            return (Criteria) this;
        }

        public Criteria andMenuidGreaterThanOrEqualTo(Integer value) {
            addCriterion("menuID >=", value, "menuid");
            return (Criteria) this;
        }

        public Criteria andMenuidLessThan(Integer value) {
            addCriterion("menuID <", value, "menuid");
            return (Criteria) this;
        }

        public Criteria andMenuidLessThanOrEqualTo(Integer value) {
            addCriterion("menuID <=", value, "menuid");
            return (Criteria) this;
        }

        public Criteria andMenuidIn(List<Integer> values) {
            addCriterion("menuID in", values, "menuid");
            return (Criteria) this;
        }

        public Criteria andMenuidNotIn(List<Integer> values) {
            addCriterion("menuID not in", values, "menuid");
            return (Criteria) this;
        }

        public Criteria andMenuidBetween(Integer value1, Integer value2) {
            addCriterion("menuID between", value1, value2, "menuid");
            return (Criteria) this;
        }

        public Criteria andMenuidNotBetween(Integer value1, Integer value2) {
            addCriterion("menuID not between", value1, value2, "menuid");
            return (Criteria) this;
        }

        public Criteria andMenunameIsNull() {
            addCriterion("menuName is null");
            return (Criteria) this;
        }

        public Criteria andMenunameIsNotNull() {
            addCriterion("menuName is not null");
            return (Criteria) this;
        }

        public Criteria andMenunameEqualTo(String value) {
            addCriterion("menuName =", value, "menuname");
            return (Criteria) this;
        }

        public Criteria andMenunameNotEqualTo(String value) {
            addCriterion("menuName <>", value, "menuname");
            return (Criteria) this;
        }

        public Criteria andMenunameGreaterThan(String value) {
            addCriterion("menuName >", value, "menuname");
            return (Criteria) this;
        }

        public Criteria andMenunameGreaterThanOrEqualTo(String value) {
            addCriterion("menuName >=", value, "menuname");
            return (Criteria) this;
        }

        public Criteria andMenunameLessThan(String value) {
            addCriterion("menuName <", value, "menuname");
            return (Criteria) this;
        }

        public Criteria andMenunameLessThanOrEqualTo(String value) {
            addCriterion("menuName <=", value, "menuname");
            return (Criteria) this;
        }

        public Criteria andMenunameLike(String value) {
            addCriterion("menuName like", value, "menuname");
            return (Criteria) this;
        }

        public Criteria andMenunameNotLike(String value) {
            addCriterion("menuName not like", value, "menuname");
            return (Criteria) this;
        }

        public Criteria andMenunameIn(List<String> values) {
            addCriterion("menuName in", values, "menuname");
            return (Criteria) this;
        }

        public Criteria andMenunameNotIn(List<String> values) {
            addCriterion("menuName not in", values, "menuname");
            return (Criteria) this;
        }

        public Criteria andMenunameBetween(String value1, String value2) {
            addCriterion("menuName between", value1, value2, "menuname");
            return (Criteria) this;
        }

        public Criteria andMenunameNotBetween(String value1, String value2) {
            addCriterion("menuName not between", value1, value2, "menuname");
            return (Criteria) this;
        }

        public Criteria andUrlIsNull() {
            addCriterion("url is null");
            return (Criteria) this;
        }

        public Criteria andUrlIsNotNull() {
            addCriterion("url is not null");
            return (Criteria) this;
        }

        public Criteria andUrlEqualTo(String value) {
            addCriterion("url =", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlNotEqualTo(String value) {
            addCriterion("url <>", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlGreaterThan(String value) {
            addCriterion("url >", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlGreaterThanOrEqualTo(String value) {
            addCriterion("url >=", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlLessThan(String value) {
            addCriterion("url <", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlLessThanOrEqualTo(String value) {
            addCriterion("url <=", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlLike(String value) {
            addCriterion("url like", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlNotLike(String value) {
            addCriterion("url not like", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlIn(List<String> values) {
            addCriterion("url in", values, "url");
            return (Criteria) this;
        }

        public Criteria andUrlNotIn(List<String> values) {
            addCriterion("url not in", values, "url");
            return (Criteria) this;
        }

        public Criteria andUrlBetween(String value1, String value2) {
            addCriterion("url between", value1, value2, "url");
            return (Criteria) this;
        }

        public Criteria andUrlNotBetween(String value1, String value2) {
            addCriterion("url not between", value1, value2, "url");
            return (Criteria) this;
        }

        public Criteria andMenupidIsNull() {
            addCriterion("menuPID is null");
            return (Criteria) this;
        }

        public Criteria andMenupidIsNotNull() {
            addCriterion("menuPID is not null");
            return (Criteria) this;
        }

        public Criteria andMenupidEqualTo(Integer value) {
            addCriterion("menuPID =", value, "menupid");
            return (Criteria) this;
        }

        public Criteria andMenupidNotEqualTo(Integer value) {
            addCriterion("menuPID <>", value, "menupid");
            return (Criteria) this;
        }

        public Criteria andMenupidGreaterThan(Integer value) {
            addCriterion("menuPID >", value, "menupid");
            return (Criteria) this;
        }

        public Criteria andMenupidGreaterThanOrEqualTo(Integer value) {
            addCriterion("menuPID >=", value, "menupid");
            return (Criteria) this;
        }

        public Criteria andMenupidLessThan(Integer value) {
            addCriterion("menuPID <", value, "menupid");
            return (Criteria) this;
        }

        public Criteria andMenupidLessThanOrEqualTo(Integer value) {
            addCriterion("menuPID <=", value, "menupid");
            return (Criteria) this;
        }

        public Criteria andMenupidIn(List<Integer> values) {
            addCriterion("menuPID in", values, "menupid");
            return (Criteria) this;
        }

        public Criteria andMenupidNotIn(List<Integer> values) {
            addCriterion("menuPID not in", values, "menupid");
            return (Criteria) this;
        }

        public Criteria andMenupidBetween(Integer value1, Integer value2) {
            addCriterion("menuPID between", value1, value2, "menupid");
            return (Criteria) this;
        }

        public Criteria andMenupidNotBetween(Integer value1, Integer value2) {
            addCriterion("menuPID not between", value1, value2, "menupid");
            return (Criteria) this;
        }

        public Criteria andMenudescIsNull() {
            addCriterion("menuDesc is null");
            return (Criteria) this;
        }

        public Criteria andMenudescIsNotNull() {
            addCriterion("menuDesc is not null");
            return (Criteria) this;
        }

        public Criteria andMenudescEqualTo(String value) {
            addCriterion("menuDesc =", value, "menudesc");
            return (Criteria) this;
        }

        public Criteria andMenudescNotEqualTo(String value) {
            addCriterion("menuDesc <>", value, "menudesc");
            return (Criteria) this;
        }

        public Criteria andMenudescGreaterThan(String value) {
            addCriterion("menuDesc >", value, "menudesc");
            return (Criteria) this;
        }

        public Criteria andMenudescGreaterThanOrEqualTo(String value) {
            addCriterion("menuDesc >=", value, "menudesc");
            return (Criteria) this;
        }

        public Criteria andMenudescLessThan(String value) {
            addCriterion("menuDesc <", value, "menudesc");
            return (Criteria) this;
        }

        public Criteria andMenudescLessThanOrEqualTo(String value) {
            addCriterion("menuDesc <=", value, "menudesc");
            return (Criteria) this;
        }

        public Criteria andMenudescLike(String value) {
            addCriterion("menuDesc like", value, "menudesc");
            return (Criteria) this;
        }

        public Criteria andMenudescNotLike(String value) {
            addCriterion("menuDesc not like", value, "menudesc");
            return (Criteria) this;
        }

        public Criteria andMenudescIn(List<String> values) {
            addCriterion("menuDesc in", values, "menudesc");
            return (Criteria) this;
        }

        public Criteria andMenudescNotIn(List<String> values) {
            addCriterion("menuDesc not in", values, "menudesc");
            return (Criteria) this;
        }

        public Criteria andMenudescBetween(String value1, String value2) {
            addCriterion("menuDesc between", value1, value2, "menudesc");
            return (Criteria) this;
        }

        public Criteria andMenudescNotBetween(String value1, String value2) {
            addCriterion("menuDesc not between", value1, value2, "menudesc");
            return (Criteria) this;
        }

        public Criteria andDividerIsNull() {
            addCriterion("divider is null");
            return (Criteria) this;
        }

        public Criteria andDividerIsNotNull() {
            addCriterion("divider is not null");
            return (Criteria) this;
        }

        public Criteria andDividerEqualTo(Integer value) {
            addCriterion("divider =", value, "divider");
            return (Criteria) this;
        }

        public Criteria andDividerNotEqualTo(Integer value) {
            addCriterion("divider <>", value, "divider");
            return (Criteria) this;
        }

        public Criteria andDividerGreaterThan(Integer value) {
            addCriterion("divider >", value, "divider");
            return (Criteria) this;
        }

        public Criteria andDividerGreaterThanOrEqualTo(Integer value) {
            addCriterion("divider >=", value, "divider");
            return (Criteria) this;
        }

        public Criteria andDividerLessThan(Integer value) {
            addCriterion("divider <", value, "divider");
            return (Criteria) this;
        }

        public Criteria andDividerLessThanOrEqualTo(Integer value) {
            addCriterion("divider <=", value, "divider");
            return (Criteria) this;
        }

        public Criteria andDividerIn(List<Integer> values) {
            addCriterion("divider in", values, "divider");
            return (Criteria) this;
        }

        public Criteria andDividerNotIn(List<Integer> values) {
            addCriterion("divider not in", values, "divider");
            return (Criteria) this;
        }

        public Criteria andDividerBetween(Integer value1, Integer value2) {
            addCriterion("divider between", value1, value2, "divider");
            return (Criteria) this;
        }

        public Criteria andDividerNotBetween(Integer value1, Integer value2) {
            addCriterion("divider not between", value1, value2, "divider");
            return (Criteria) this;
        }

        public Criteria andSortidIsNull() {
            addCriterion("sortID is null");
            return (Criteria) this;
        }

        public Criteria andSortidIsNotNull() {
            addCriterion("sortID is not null");
            return (Criteria) this;
        }

        public Criteria andSortidEqualTo(Integer value) {
            addCriterion("sortID =", value, "sortid");
            return (Criteria) this;
        }

        public Criteria andSortidNotEqualTo(Integer value) {
            addCriterion("sortID <>", value, "sortid");
            return (Criteria) this;
        }

        public Criteria andSortidGreaterThan(Integer value) {
            addCriterion("sortID >", value, "sortid");
            return (Criteria) this;
        }

        public Criteria andSortidGreaterThanOrEqualTo(Integer value) {
            addCriterion("sortID >=", value, "sortid");
            return (Criteria) this;
        }

        public Criteria andSortidLessThan(Integer value) {
            addCriterion("sortID <", value, "sortid");
            return (Criteria) this;
        }

        public Criteria andSortidLessThanOrEqualTo(Integer value) {
            addCriterion("sortID <=", value, "sortid");
            return (Criteria) this;
        }

        public Criteria andSortidIn(List<Integer> values) {
            addCriterion("sortID in", values, "sortid");
            return (Criteria) this;
        }

        public Criteria andSortidNotIn(List<Integer> values) {
            addCriterion("sortID not in", values, "sortid");
            return (Criteria) this;
        }

        public Criteria andSortidBetween(Integer value1, Integer value2) {
            addCriterion("sortID between", value1, value2, "sortid");
            return (Criteria) this;
        }

        public Criteria andSortidNotBetween(Integer value1, Integer value2) {
            addCriterion("sortID not between", value1, value2, "sortid");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sys_menu
     *
     * @mbg.generated do_not_delete_during_merge Sat Sep 03 17:26:49 CST 2022
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sys_menu
     *
     * @mbg.generated Sat Sep 03 17:26:49 CST 2022
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}